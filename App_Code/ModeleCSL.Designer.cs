//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ModeleCSL", "UtilisateurProvince", "Utilisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Utilisateur), "Province", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Province))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "UtilisateurmembreFamille", "Utilisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Utilisateur), "membreFamille", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModeleCSL.MembreFamille))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "UtilisateurNouvelle", "Utilisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Utilisateur), "Nouvelle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModeleCSL.Nouvelle))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "UtilisateurCommande", "Utilisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Utilisateur), "Commande", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModeleCSL.Commande))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "CommandeCarte", "Commande", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Commande), "Carte", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Carte))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "CommandeElementsCommande", "Commande", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Commande), "ElementsCommande", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModeleCSL.ElementsCommande))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "GroupeElementsCommande", "Groupe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Groupe), "ElementsCommande", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModeleCSL.ElementsCommande))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "ActiviteTypeActivite", "Activite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Activite), "TypeActivite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.TypeActivite))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "GroupeActivite", "Groupe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Groupe), "Activite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Activite))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "GroupeReservation", "Groupe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Groupe), "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModeleCSL.Reservation))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "ReservationLocal", "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Reservation), "Local", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Local))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "ReservationJour", "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Reservation), "Jour", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Jour))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "ReservationSession", "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Reservation), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Session))]
[assembly: EdmRelationshipAttribute("ModeleCSL", "UtilisateurTypeUtilisateur", "Utilisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.Utilisateur), "TypeUtilisateur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModeleCSL.TypeUtilisateur))]

#endregion

namespace ModeleCSL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ModeleCSLContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ModeleCSLContainer object using the connection string found in the 'ModeleCSLContainer' section of the application configuration file.
        /// </summary>
        public ModeleCSLContainer() : base("name=ModeleCSLContainer", "ModeleCSLContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModeleCSLContainer object.
        /// </summary>
        public ModeleCSLContainer(string connectionString) : base(connectionString, "ModeleCSLContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModeleCSLContainer object.
        /// </summary>
        public ModeleCSLContainer(EntityConnection connection) : base(connection, "ModeleCSLContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Utilisateur> UtilisateurJeu
        {
            get
            {
                if ((_UtilisateurJeu == null))
                {
                    _UtilisateurJeu = base.CreateObjectSet<Utilisateur>("UtilisateurJeu");
                }
                return _UtilisateurJeu;
            }
        }
        private ObjectSet<Utilisateur> _UtilisateurJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Province> ProvinceJeu
        {
            get
            {
                if ((_ProvinceJeu == null))
                {
                    _ProvinceJeu = base.CreateObjectSet<Province>("ProvinceJeu");
                }
                return _ProvinceJeu;
            }
        }
        private ObjectSet<Province> _ProvinceJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembreFamille> MembreFamilleJeu1
        {
            get
            {
                if ((_MembreFamilleJeu1 == null))
                {
                    _MembreFamilleJeu1 = base.CreateObjectSet<MembreFamille>("MembreFamilleJeu1");
                }
                return _MembreFamilleJeu1;
            }
        }
        private ObjectSet<MembreFamille> _MembreFamilleJeu1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Nouvelle> NouvelleJeu
        {
            get
            {
                if ((_NouvelleJeu == null))
                {
                    _NouvelleJeu = base.CreateObjectSet<Nouvelle>("NouvelleJeu");
                }
                return _NouvelleJeu;
            }
        }
        private ObjectSet<Nouvelle> _NouvelleJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Commande> CommandeJeu
        {
            get
            {
                if ((_CommandeJeu == null))
                {
                    _CommandeJeu = base.CreateObjectSet<Commande>("CommandeJeu");
                }
                return _CommandeJeu;
            }
        }
        private ObjectSet<Commande> _CommandeJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carte> CarteJeu
        {
            get
            {
                if ((_CarteJeu == null))
                {
                    _CarteJeu = base.CreateObjectSet<Carte>("CarteJeu");
                }
                return _CarteJeu;
            }
        }
        private ObjectSet<Carte> _CarteJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ElementsCommande> ElementsCommandeJeu
        {
            get
            {
                if ((_ElementsCommandeJeu == null))
                {
                    _ElementsCommandeJeu = base.CreateObjectSet<ElementsCommande>("ElementsCommandeJeu");
                }
                return _ElementsCommandeJeu;
            }
        }
        private ObjectSet<ElementsCommande> _ElementsCommandeJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Groupe> GroupeJeu
        {
            get
            {
                if ((_GroupeJeu == null))
                {
                    _GroupeJeu = base.CreateObjectSet<Groupe>("GroupeJeu");
                }
                return _GroupeJeu;
            }
        }
        private ObjectSet<Groupe> _GroupeJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activite> ActiviteJeu
        {
            get
            {
                if ((_ActiviteJeu == null))
                {
                    _ActiviteJeu = base.CreateObjectSet<Activite>("ActiviteJeu");
                }
                return _ActiviteJeu;
            }
        }
        private ObjectSet<Activite> _ActiviteJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeActivite> TypeActiviteJeu
        {
            get
            {
                if ((_TypeActiviteJeu == null))
                {
                    _TypeActiviteJeu = base.CreateObjectSet<TypeActivite>("TypeActiviteJeu");
                }
                return _TypeActiviteJeu;
            }
        }
        private ObjectSet<TypeActivite> _TypeActiviteJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reservation> ReservationJeu
        {
            get
            {
                if ((_ReservationJeu == null))
                {
                    _ReservationJeu = base.CreateObjectSet<Reservation>("ReservationJeu");
                }
                return _ReservationJeu;
            }
        }
        private ObjectSet<Reservation> _ReservationJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Local> LocalJeu
        {
            get
            {
                if ((_LocalJeu == null))
                {
                    _LocalJeu = base.CreateObjectSet<Local>("LocalJeu");
                }
                return _LocalJeu;
            }
        }
        private ObjectSet<Local> _LocalJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Jour> JourJeu
        {
            get
            {
                if ((_JourJeu == null))
                {
                    _JourJeu = base.CreateObjectSet<Jour>("JourJeu");
                }
                return _JourJeu;
            }
        }
        private ObjectSet<Jour> _JourJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> SessionJeu
        {
            get
            {
                if ((_SessionJeu == null))
                {
                    _SessionJeu = base.CreateObjectSet<Session>("SessionJeu");
                }
                return _SessionJeu;
            }
        }
        private ObjectSet<Session> _SessionJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeUtilisateur> TypeUtilisateurJeu
        {
            get
            {
                if ((_TypeUtilisateurJeu == null))
                {
                    _TypeUtilisateurJeu = base.CreateObjectSet<TypeUtilisateur>("TypeUtilisateurJeu");
                }
                return _TypeUtilisateurJeu;
            }
        }
        private ObjectSet<TypeUtilisateur> _TypeUtilisateurJeu;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UtilisateurJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilisateurJeu(Utilisateur utilisateur)
        {
            base.AddObject("UtilisateurJeu", utilisateur);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProvinceJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinceJeu(Province province)
        {
            base.AddObject("ProvinceJeu", province);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MembreFamilleJeu1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembreFamilleJeu1(MembreFamille membreFamille)
        {
            base.AddObject("MembreFamilleJeu1", membreFamille);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NouvelleJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNouvelleJeu(Nouvelle nouvelle)
        {
            base.AddObject("NouvelleJeu", nouvelle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommandeJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommandeJeu(Commande commande)
        {
            base.AddObject("CommandeJeu", commande);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarteJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarteJeu(Carte carte)
        {
            base.AddObject("CarteJeu", carte);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ElementsCommandeJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElementsCommandeJeu(ElementsCommande elementsCommande)
        {
            base.AddObject("ElementsCommandeJeu", elementsCommande);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupeJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupeJeu(Groupe groupe)
        {
            base.AddObject("GroupeJeu", groupe);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActiviteJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActiviteJeu(Activite activite)
        {
            base.AddObject("ActiviteJeu", activite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeActiviteJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeActiviteJeu(TypeActivite typeActivite)
        {
            base.AddObject("TypeActiviteJeu", typeActivite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReservationJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReservationJeu(Reservation reservation)
        {
            base.AddObject("ReservationJeu", reservation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocalJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocalJeu(Local local)
        {
            base.AddObject("LocalJeu", local);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JourJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJourJeu(Jour jour)
        {
            base.AddObject("JourJeu", jour);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionJeu(Session session)
        {
            base.AddObject("SessionJeu", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeUtilisateurJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeUtilisateurJeu(TypeUtilisateur typeUtilisateur)
        {
            base.AddObject("TypeUtilisateurJeu", typeUtilisateur);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Activite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activite object.
        /// </summary>
        /// <param name="idActivite">Initial value of the idActivite property.</param>
        /// <param name="nomActiviteFr">Initial value of the nomActiviteFr property.</param>
        /// <param name="nomActiviteEn">Initial value of the nomActiviteEn property.</param>
        /// <param name="descriptionActiviteFr">Initial value of the descriptionActiviteFr property.</param>
        /// <param name="descriptionActiviteEn">Initial value of the descriptionActiviteEn property.</param>
        /// <param name="ageMinimum">Initial value of the ageMinimum property.</param>
        /// <param name="ageMaximum">Initial value of the ageMaximum property.</param>
        /// <param name="sessionHiver">Initial value of the sessionHiver property.</param>
        /// <param name="sessionPrintemps">Initial value of the sessionPrintemps property.</param>
        /// <param name="sessionEte">Initial value of the sessionEte property.</param>
        /// <param name="sessionAutomne">Initial value of the sessionAutomne property.</param>
        /// <param name="prix">Initial value of the prix property.</param>
        /// <param name="dateDebut">Initial value of the dateDebut property.</param>
        /// <param name="dateFin">Initial value of the dateFin property.</param>
        public static Activite CreateActivite(global::System.Int32 idActivite, global::System.String nomActiviteFr, global::System.String nomActiviteEn, global::System.String descriptionActiviteFr, global::System.String descriptionActiviteEn, global::System.Int32 ageMinimum, global::System.Int32 ageMaximum, global::System.Boolean sessionHiver, global::System.Boolean sessionPrintemps, global::System.Boolean sessionEte, global::System.Boolean sessionAutomne, global::System.Decimal prix, global::System.DateTime dateDebut, global::System.DateTime dateFin)
        {
            Activite activite = new Activite();
            activite.idActivite = idActivite;
            activite.nomActiviteFr = nomActiviteFr;
            activite.nomActiviteEn = nomActiviteEn;
            activite.descriptionActiviteFr = descriptionActiviteFr;
            activite.descriptionActiviteEn = descriptionActiviteEn;
            activite.ageMinimum = ageMinimum;
            activite.ageMaximum = ageMaximum;
            activite.sessionHiver = sessionHiver;
            activite.sessionPrintemps = sessionPrintemps;
            activite.sessionEte = sessionEte;
            activite.sessionAutomne = sessionAutomne;
            activite.prix = prix;
            activite.dateDebut = dateDebut;
            activite.dateFin = dateFin;
            return activite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idActivite
        {
            get
            {
                return _idActivite;
            }
            set
            {
                if (_idActivite != value)
                {
                    OnidActiviteChanging(value);
                    ReportPropertyChanging("idActivite");
                    _idActivite = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idActivite");
                    OnidActiviteChanged();
                }
            }
        }
        private global::System.Int32 _idActivite;
        partial void OnidActiviteChanging(global::System.Int32 value);
        partial void OnidActiviteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomActiviteFr
        {
            get
            {
                return _nomActiviteFr;
            }
            set
            {
                OnnomActiviteFrChanging(value);
                ReportPropertyChanging("nomActiviteFr");
                _nomActiviteFr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomActiviteFr");
                OnnomActiviteFrChanged();
            }
        }
        private global::System.String _nomActiviteFr;
        partial void OnnomActiviteFrChanging(global::System.String value);
        partial void OnnomActiviteFrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomActiviteEn
        {
            get
            {
                return _nomActiviteEn;
            }
            set
            {
                OnnomActiviteEnChanging(value);
                ReportPropertyChanging("nomActiviteEn");
                _nomActiviteEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomActiviteEn");
                OnnomActiviteEnChanged();
            }
        }
        private global::System.String _nomActiviteEn;
        partial void OnnomActiviteEnChanging(global::System.String value);
        partial void OnnomActiviteEnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String descriptionActiviteFr
        {
            get
            {
                return _descriptionActiviteFr;
            }
            set
            {
                OndescriptionActiviteFrChanging(value);
                ReportPropertyChanging("descriptionActiviteFr");
                _descriptionActiviteFr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("descriptionActiviteFr");
                OndescriptionActiviteFrChanged();
            }
        }
        private global::System.String _descriptionActiviteFr;
        partial void OndescriptionActiviteFrChanging(global::System.String value);
        partial void OndescriptionActiviteFrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String descriptionActiviteEn
        {
            get
            {
                return _descriptionActiviteEn;
            }
            set
            {
                OndescriptionActiviteEnChanging(value);
                ReportPropertyChanging("descriptionActiviteEn");
                _descriptionActiviteEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("descriptionActiviteEn");
                OndescriptionActiviteEnChanged();
            }
        }
        private global::System.String _descriptionActiviteEn;
        partial void OndescriptionActiviteEnChanging(global::System.String value);
        partial void OndescriptionActiviteEnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ageMinimum
        {
            get
            {
                return _ageMinimum;
            }
            set
            {
                OnageMinimumChanging(value);
                ReportPropertyChanging("ageMinimum");
                _ageMinimum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ageMinimum");
                OnageMinimumChanged();
            }
        }
        private global::System.Int32 _ageMinimum;
        partial void OnageMinimumChanging(global::System.Int32 value);
        partial void OnageMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ageMaximum
        {
            get
            {
                return _ageMaximum;
            }
            set
            {
                OnageMaximumChanging(value);
                ReportPropertyChanging("ageMaximum");
                _ageMaximum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ageMaximum");
                OnageMaximumChanged();
            }
        }
        private global::System.Int32 _ageMaximum;
        partial void OnageMaximumChanging(global::System.Int32 value);
        partial void OnageMaximumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean sessionHiver
        {
            get
            {
                return _sessionHiver;
            }
            set
            {
                OnsessionHiverChanging(value);
                ReportPropertyChanging("sessionHiver");
                _sessionHiver = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sessionHiver");
                OnsessionHiverChanged();
            }
        }
        private global::System.Boolean _sessionHiver;
        partial void OnsessionHiverChanging(global::System.Boolean value);
        partial void OnsessionHiverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean sessionPrintemps
        {
            get
            {
                return _sessionPrintemps;
            }
            set
            {
                OnsessionPrintempsChanging(value);
                ReportPropertyChanging("sessionPrintemps");
                _sessionPrintemps = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sessionPrintemps");
                OnsessionPrintempsChanged();
            }
        }
        private global::System.Boolean _sessionPrintemps;
        partial void OnsessionPrintempsChanging(global::System.Boolean value);
        partial void OnsessionPrintempsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean sessionEte
        {
            get
            {
                return _sessionEte;
            }
            set
            {
                OnsessionEteChanging(value);
                ReportPropertyChanging("sessionEte");
                _sessionEte = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sessionEte");
                OnsessionEteChanged();
            }
        }
        private global::System.Boolean _sessionEte;
        partial void OnsessionEteChanging(global::System.Boolean value);
        partial void OnsessionEteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean sessionAutomne
        {
            get
            {
                return _sessionAutomne;
            }
            set
            {
                OnsessionAutomneChanging(value);
                ReportPropertyChanging("sessionAutomne");
                _sessionAutomne = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sessionAutomne");
                OnsessionAutomneChanged();
            }
        }
        private global::System.Boolean _sessionAutomne;
        partial void OnsessionAutomneChanging(global::System.Boolean value);
        partial void OnsessionAutomneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal prix
        {
            get
            {
                return _prix;
            }
            set
            {
                OnprixChanging(value);
                ReportPropertyChanging("prix");
                _prix = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prix");
                OnprixChanged();
            }
        }
        private global::System.Decimal _prix;
        partial void OnprixChanging(global::System.Decimal value);
        partial void OnprixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateDebut
        {
            get
            {
                return _dateDebut;
            }
            set
            {
                OndateDebutChanging(value);
                ReportPropertyChanging("dateDebut");
                _dateDebut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateDebut");
                OndateDebutChanged();
            }
        }
        private global::System.DateTime _dateDebut;
        partial void OndateDebutChanging(global::System.DateTime value);
        partial void OndateDebutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateFin
        {
            get
            {
                return _dateFin;
            }
            set
            {
                OndateFinChanging(value);
                ReportPropertyChanging("dateFin");
                _dateFin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateFin");
                OndateFinChanged();
            }
        }
        private global::System.DateTime _dateFin;
        partial void OndateFinChanging(global::System.DateTime value);
        partial void OndateFinChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "ActiviteTypeActivite", "TypeActivite")]
        public TypeActivite TypeActivite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeActivite>("ModeleCSL.ActiviteTypeActivite", "TypeActivite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeActivite>("ModeleCSL.ActiviteTypeActivite", "TypeActivite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeActivite> TypeActiviteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeActivite>("ModeleCSL.ActiviteTypeActivite", "TypeActivite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeActivite>("ModeleCSL.ActiviteTypeActivite", "TypeActivite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "GroupeActivite", "Groupe")]
        public Groupe Groupe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeActivite", "Groupe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeActivite", "Groupe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groupe> GroupeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeActivite", "Groupe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groupe>("ModeleCSL.GroupeActivite", "Groupe", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Carte")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carte : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carte object.
        /// </summary>
        /// <param name="idCarte">Initial value of the idCarte property.</param>
        /// <param name="nomCarte">Initial value of the nomCarte property.</param>
        public static Carte CreateCarte(global::System.Int32 idCarte, global::System.String nomCarte)
        {
            Carte carte = new Carte();
            carte.idCarte = idCarte;
            carte.nomCarte = nomCarte;
            return carte;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCarte
        {
            get
            {
                return _idCarte;
            }
            set
            {
                if (_idCarte != value)
                {
                    OnidCarteChanging(value);
                    ReportPropertyChanging("idCarte");
                    _idCarte = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idCarte");
                    OnidCarteChanged();
                }
            }
        }
        private global::System.Int32 _idCarte;
        partial void OnidCarteChanging(global::System.Int32 value);
        partial void OnidCarteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomCarte
        {
            get
            {
                return _nomCarte;
            }
            set
            {
                OnnomCarteChanging(value);
                ReportPropertyChanging("nomCarte");
                _nomCarte = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomCarte");
                OnnomCarteChanged();
            }
        }
        private global::System.String _nomCarte;
        partial void OnnomCarteChanging(global::System.String value);
        partial void OnnomCarteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "CommandeCarte", "Commande")]
        public Commande Commande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("ModeleCSL.CommandeCarte", "Commande").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("ModeleCSL.CommandeCarte", "Commande").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Commande> CommandeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("ModeleCSL.CommandeCarte", "Commande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Commande>("ModeleCSL.CommandeCarte", "Commande", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Commande")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Commande : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Commande object.
        /// </summary>
        /// <param name="noCommande">Initial value of the noCommande property.</param>
        /// <param name="dateCommande">Initial value of the dateCommande property.</param>
        /// <param name="noCarte">Initial value of the noCarte property.</param>
        /// <param name="moisExpiration">Initial value of the moisExpiration property.</param>
        /// <param name="anneeExpiration">Initial value of the anneeExpiration property.</param>
        /// <param name="titulaireCarte">Initial value of the titulaireCarte property.</param>
        public static Commande CreateCommande(global::System.Int32 noCommande, global::System.DateTime dateCommande, global::System.Int32 noCarte, global::System.Int32 moisExpiration, global::System.Int32 anneeExpiration, global::System.String titulaireCarte)
        {
            Commande commande = new Commande();
            commande.noCommande = noCommande;
            commande.dateCommande = dateCommande;
            commande.noCarte = noCarte;
            commande.moisExpiration = moisExpiration;
            commande.anneeExpiration = anneeExpiration;
            commande.titulaireCarte = titulaireCarte;
            return commande;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 noCommande
        {
            get
            {
                return _noCommande;
            }
            set
            {
                if (_noCommande != value)
                {
                    OnnoCommandeChanging(value);
                    ReportPropertyChanging("noCommande");
                    _noCommande = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("noCommande");
                    OnnoCommandeChanged();
                }
            }
        }
        private global::System.Int32 _noCommande;
        partial void OnnoCommandeChanging(global::System.Int32 value);
        partial void OnnoCommandeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateCommande
        {
            get
            {
                return _dateCommande;
            }
            set
            {
                OndateCommandeChanging(value);
                ReportPropertyChanging("dateCommande");
                _dateCommande = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateCommande");
                OndateCommandeChanged();
            }
        }
        private global::System.DateTime _dateCommande;
        partial void OndateCommandeChanging(global::System.DateTime value);
        partial void OndateCommandeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 noCarte
        {
            get
            {
                return _noCarte;
            }
            set
            {
                OnnoCarteChanging(value);
                ReportPropertyChanging("noCarte");
                _noCarte = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("noCarte");
                OnnoCarteChanged();
            }
        }
        private global::System.Int32 _noCarte;
        partial void OnnoCarteChanging(global::System.Int32 value);
        partial void OnnoCarteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 moisExpiration
        {
            get
            {
                return _moisExpiration;
            }
            set
            {
                OnmoisExpirationChanging(value);
                ReportPropertyChanging("moisExpiration");
                _moisExpiration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("moisExpiration");
                OnmoisExpirationChanged();
            }
        }
        private global::System.Int32 _moisExpiration;
        partial void OnmoisExpirationChanging(global::System.Int32 value);
        partial void OnmoisExpirationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 anneeExpiration
        {
            get
            {
                return _anneeExpiration;
            }
            set
            {
                OnanneeExpirationChanging(value);
                ReportPropertyChanging("anneeExpiration");
                _anneeExpiration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("anneeExpiration");
                OnanneeExpirationChanged();
            }
        }
        private global::System.Int32 _anneeExpiration;
        partial void OnanneeExpirationChanging(global::System.Int32 value);
        partial void OnanneeExpirationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String titulaireCarte
        {
            get
            {
                return _titulaireCarte;
            }
            set
            {
                OntitulaireCarteChanging(value);
                ReportPropertyChanging("titulaireCarte");
                _titulaireCarte = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("titulaireCarte");
                OntitulaireCarteChanged();
            }
        }
        private global::System.String _titulaireCarte;
        partial void OntitulaireCarteChanging(global::System.String value);
        partial void OntitulaireCarteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurCommande", "Utilisateur")]
        public Utilisateur Utilisateur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurCommande", "Utilisateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurCommande", "Utilisateur").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Utilisateur> UtilisateurReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurCommande", "Utilisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Utilisateur>("ModeleCSL.UtilisateurCommande", "Utilisateur", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "CommandeCarte", "Carte")]
        public Carte Carte
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carte>("ModeleCSL.CommandeCarte", "Carte").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carte>("ModeleCSL.CommandeCarte", "Carte").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carte> CarteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carte>("ModeleCSL.CommandeCarte", "Carte");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carte>("ModeleCSL.CommandeCarte", "Carte", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "CommandeElementsCommande", "ElementsCommande")]
        public EntityCollection<ElementsCommande> ElementsCommande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElementsCommande>("ModeleCSL.CommandeElementsCommande", "ElementsCommande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElementsCommande>("ModeleCSL.CommandeElementsCommande", "ElementsCommande", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="ElementsCommande")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ElementsCommande : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ElementsCommande object.
        /// </summary>
        /// <param name="dateAjout">Initial value of the dateAjout property.</param>
        /// <param name="prixPaye">Initial value of the prixPaye property.</param>
        /// <param name="idElementCommande">Initial value of the idElementCommande property.</param>
        public static ElementsCommande CreateElementsCommande(global::System.DateTime dateAjout, global::System.Decimal prixPaye, global::System.Int32 idElementCommande)
        {
            ElementsCommande elementsCommande = new ElementsCommande();
            elementsCommande.dateAjout = dateAjout;
            elementsCommande.prixPaye = prixPaye;
            elementsCommande.idElementCommande = idElementCommande;
            return elementsCommande;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAjout
        {
            get
            {
                return _dateAjout;
            }
            set
            {
                OndateAjoutChanging(value);
                ReportPropertyChanging("dateAjout");
                _dateAjout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAjout");
                OndateAjoutChanged();
            }
        }
        private global::System.DateTime _dateAjout;
        partial void OndateAjoutChanging(global::System.DateTime value);
        partial void OndateAjoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal prixPaye
        {
            get
            {
                return _prixPaye;
            }
            set
            {
                OnprixPayeChanging(value);
                ReportPropertyChanging("prixPaye");
                _prixPaye = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prixPaye");
                OnprixPayeChanged();
            }
        }
        private global::System.Decimal _prixPaye;
        partial void OnprixPayeChanging(global::System.Decimal value);
        partial void OnprixPayeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idElementCommande
        {
            get
            {
                return _idElementCommande;
            }
            set
            {
                if (_idElementCommande != value)
                {
                    OnidElementCommandeChanging(value);
                    ReportPropertyChanging("idElementCommande");
                    _idElementCommande = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idElementCommande");
                    OnidElementCommandeChanged();
                }
            }
        }
        private global::System.Int32 _idElementCommande;
        partial void OnidElementCommandeChanging(global::System.Int32 value);
        partial void OnidElementCommandeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "CommandeElementsCommande", "Commande")]
        public Commande Commande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("ModeleCSL.CommandeElementsCommande", "Commande").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("ModeleCSL.CommandeElementsCommande", "Commande").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Commande> CommandeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("ModeleCSL.CommandeElementsCommande", "Commande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Commande>("ModeleCSL.CommandeElementsCommande", "Commande", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "GroupeElementsCommande", "Groupe")]
        public Groupe Groupe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeElementsCommande", "Groupe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeElementsCommande", "Groupe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groupe> GroupeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeElementsCommande", "Groupe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groupe>("ModeleCSL.GroupeElementsCommande", "Groupe", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Employe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employe : Utilisateur
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employe object.
        /// </summary>
        /// <param name="idUtilisateur">Initial value of the idUtilisateur property.</param>
        /// <param name="identifiant">Initial value of the identifiant property.</param>
        /// <param name="prenom">Initial value of the prenom property.</param>
        /// <param name="nom">Initial value of the nom property.</param>
        /// <param name="noCivique">Initial value of the noCivique property.</param>
        /// <param name="rue">Initial value of the rue property.</param>
        /// <param name="ville">Initial value of the ville property.</param>
        /// <param name="codePostal">Initial value of the codePostal property.</param>
        /// <param name="noTelephone">Initial value of the noTelephone property.</param>
        /// <param name="dateNaissance">Initial value of the dateNaissance property.</param>
        /// <param name="dateAdhesion">Initial value of the dateAdhesion property.</param>
        /// <param name="motPasse">Initial value of the motPasse property.</param>
        /// <param name="noEmploye">Initial value of the noEmploye property.</param>
        /// <param name="dateEmbauche">Initial value of the dateEmbauche property.</param>
        public static Employe CreateEmploye(global::System.Int32 idUtilisateur, global::System.String identifiant, global::System.String prenom, global::System.String nom, global::System.String noCivique, global::System.String rue, global::System.String ville, global::System.String codePostal, global::System.String noTelephone, global::System.DateTime dateNaissance, global::System.DateTime dateAdhesion, global::System.String motPasse, global::System.Int32 noEmploye, global::System.DateTime dateEmbauche)
        {
            Employe employe = new Employe();
            employe.idUtilisateur = idUtilisateur;
            employe.identifiant = identifiant;
            employe.prenom = prenom;
            employe.nom = nom;
            employe.noCivique = noCivique;
            employe.rue = rue;
            employe.ville = ville;
            employe.codePostal = codePostal;
            employe.noTelephone = noTelephone;
            employe.dateNaissance = dateNaissance;
            employe.dateAdhesion = dateAdhesion;
            employe.motPasse = motPasse;
            employe.noEmploye = noEmploye;
            employe.dateEmbauche = dateEmbauche;
            return employe;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 noEmploye
        {
            get
            {
                return _noEmploye;
            }
            set
            {
                OnnoEmployeChanging(value);
                ReportPropertyChanging("noEmploye");
                _noEmploye = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("noEmploye");
                OnnoEmployeChanged();
            }
        }
        private global::System.Int32 _noEmploye;
        partial void OnnoEmployeChanging(global::System.Int32 value);
        partial void OnnoEmployeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateEmbauche
        {
            get
            {
                return _dateEmbauche;
            }
            set
            {
                OndateEmbaucheChanging(value);
                ReportPropertyChanging("dateEmbauche");
                _dateEmbauche = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateEmbauche");
                OndateEmbaucheChanged();
            }
        }
        private global::System.DateTime _dateEmbauche;
        partial void OndateEmbaucheChanging(global::System.DateTime value);
        partial void OndateEmbaucheChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Groupe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Groupe : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Groupe object.
        /// </summary>
        /// <param name="idGroupe">Initial value of the idGroupe property.</param>
        /// <param name="capaciteGroupe">Initial value of the capaciteGroupe property.</param>
        public static Groupe CreateGroupe(global::System.Int32 idGroupe, global::System.Int32 capaciteGroupe)
        {
            Groupe groupe = new Groupe();
            groupe.idGroupe = idGroupe;
            groupe.capaciteGroupe = capaciteGroupe;
            return groupe;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idGroupe
        {
            get
            {
                return _idGroupe;
            }
            set
            {
                if (_idGroupe != value)
                {
                    OnidGroupeChanging(value);
                    ReportPropertyChanging("idGroupe");
                    _idGroupe = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idGroupe");
                    OnidGroupeChanged();
                }
            }
        }
        private global::System.Int32 _idGroupe;
        partial void OnidGroupeChanging(global::System.Int32 value);
        partial void OnidGroupeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 capaciteGroupe
        {
            get
            {
                return _capaciteGroupe;
            }
            set
            {
                OncapaciteGroupeChanging(value);
                ReportPropertyChanging("capaciteGroupe");
                _capaciteGroupe = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("capaciteGroupe");
                OncapaciteGroupeChanged();
            }
        }
        private global::System.Int32 _capaciteGroupe;
        partial void OncapaciteGroupeChanging(global::System.Int32 value);
        partial void OncapaciteGroupeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String commentaire
        {
            get
            {
                return _commentaire;
            }
            set
            {
                OncommentaireChanging(value);
                ReportPropertyChanging("commentaire");
                _commentaire = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("commentaire");
                OncommentaireChanged();
            }
        }
        private global::System.String _commentaire;
        partial void OncommentaireChanging(global::System.String value);
        partial void OncommentaireChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "GroupeElementsCommande", "ElementsCommande")]
        public EntityCollection<ElementsCommande> ElementsCommande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElementsCommande>("ModeleCSL.GroupeElementsCommande", "ElementsCommande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElementsCommande>("ModeleCSL.GroupeElementsCommande", "ElementsCommande", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "GroupeActivite", "Activite")]
        public Activite Activite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activite>("ModeleCSL.GroupeActivite", "Activite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activite>("ModeleCSL.GroupeActivite", "Activite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activite> ActiviteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activite>("ModeleCSL.GroupeActivite", "Activite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activite>("ModeleCSL.GroupeActivite", "Activite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "GroupeReservation", "Reservation")]
        public EntityCollection<Reservation> Reservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("ModeleCSL.GroupeReservation", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("ModeleCSL.GroupeReservation", "Reservation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Jour")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Jour : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Jour object.
        /// </summary>
        /// <param name="idJour">Initial value of the idJour property.</param>
        /// <param name="nomJourFr">Initial value of the nomJourFr property.</param>
        /// <param name="nomJourEn">Initial value of the nomJourEn property.</param>
        public static Jour CreateJour(global::System.Int32 idJour, global::System.String nomJourFr, global::System.String nomJourEn)
        {
            Jour jour = new Jour();
            jour.idJour = idJour;
            jour.nomJourFr = nomJourFr;
            jour.nomJourEn = nomJourEn;
            return jour;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idJour
        {
            get
            {
                return _idJour;
            }
            set
            {
                if (_idJour != value)
                {
                    OnidJourChanging(value);
                    ReportPropertyChanging("idJour");
                    _idJour = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idJour");
                    OnidJourChanged();
                }
            }
        }
        private global::System.Int32 _idJour;
        partial void OnidJourChanging(global::System.Int32 value);
        partial void OnidJourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomJourFr
        {
            get
            {
                return _nomJourFr;
            }
            set
            {
                OnnomJourFrChanging(value);
                ReportPropertyChanging("nomJourFr");
                _nomJourFr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomJourFr");
                OnnomJourFrChanged();
            }
        }
        private global::System.String _nomJourFr;
        partial void OnnomJourFrChanging(global::System.String value);
        partial void OnnomJourFrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomJourEn
        {
            get
            {
                return _nomJourEn;
            }
            set
            {
                OnnomJourEnChanging(value);
                ReportPropertyChanging("nomJourEn");
                _nomJourEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomJourEn");
                OnnomJourEnChanged();
            }
        }
        private global::System.String _nomJourEn;
        partial void OnnomJourEnChanging(global::System.String value);
        partial void OnnomJourEnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "ReservationJour", "Reservation")]
        public Reservation Reservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationJour", "Reservation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationJour", "Reservation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reservation> ReservationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationJour", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reservation>("ModeleCSL.ReservationJour", "Reservation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Local")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Local : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Local object.
        /// </summary>
        /// <param name="idLocal">Initial value of the idLocal property.</param>
        /// <param name="reservableClient">Initial value of the reservableClient property.</param>
        /// <param name="nomLocal">Initial value of the nomLocal property.</param>
        /// <param name="capaciteMax">Initial value of the capaciteMax property.</param>
        public static Local CreateLocal(global::System.Int32 idLocal, global::System.Boolean reservableClient, global::System.String nomLocal, global::System.Int32 capaciteMax)
        {
            Local local = new Local();
            local.idLocal = idLocal;
            local.reservableClient = reservableClient;
            local.nomLocal = nomLocal;
            local.capaciteMax = capaciteMax;
            return local;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idLocal
        {
            get
            {
                return _idLocal;
            }
            set
            {
                if (_idLocal != value)
                {
                    OnidLocalChanging(value);
                    ReportPropertyChanging("idLocal");
                    _idLocal = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idLocal");
                    OnidLocalChanged();
                }
            }
        }
        private global::System.Int32 _idLocal;
        partial void OnidLocalChanging(global::System.Int32 value);
        partial void OnidLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String descriptionLocal
        {
            get
            {
                return _descriptionLocal;
            }
            set
            {
                OndescriptionLocalChanging(value);
                ReportPropertyChanging("descriptionLocal");
                _descriptionLocal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("descriptionLocal");
                OndescriptionLocalChanged();
            }
        }
        private global::System.String _descriptionLocal;
        partial void OndescriptionLocalChanging(global::System.String value);
        partial void OndescriptionLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean reservableClient
        {
            get
            {
                return _reservableClient;
            }
            set
            {
                OnreservableClientChanging(value);
                ReportPropertyChanging("reservableClient");
                _reservableClient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("reservableClient");
                OnreservableClientChanged();
            }
        }
        private global::System.Boolean _reservableClient;
        partial void OnreservableClientChanging(global::System.Boolean value);
        partial void OnreservableClientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomLocal
        {
            get
            {
                return _nomLocal;
            }
            set
            {
                OnnomLocalChanging(value);
                ReportPropertyChanging("nomLocal");
                _nomLocal = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomLocal");
                OnnomLocalChanged();
            }
        }
        private global::System.String _nomLocal;
        partial void OnnomLocalChanging(global::System.String value);
        partial void OnnomLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 capaciteMax
        {
            get
            {
                return _capaciteMax;
            }
            set
            {
                OncapaciteMaxChanging(value);
                ReportPropertyChanging("capaciteMax");
                _capaciteMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("capaciteMax");
                OncapaciteMaxChanged();
            }
        }
        private global::System.Int32 _capaciteMax;
        partial void OncapaciteMaxChanging(global::System.Int32 value);
        partial void OncapaciteMaxChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "ReservationLocal", "Reservation")]
        public Reservation Reservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationLocal", "Reservation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationLocal", "Reservation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reservation> ReservationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationLocal", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reservation>("ModeleCSL.ReservationLocal", "Reservation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="MembreFamille")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MembreFamille : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MembreFamille object.
        /// </summary>
        /// <param name="nomMembreFamille">Initial value of the nomMembreFamille property.</param>
        /// <param name="prenomMembreFamille">Initial value of the prenomMembreFamille property.</param>
        /// <param name="dateNaissanceMembreFamille">Initial value of the dateNaissanceMembreFamille property.</param>
        /// <param name="dateAdhesionMembreFamille">Initial value of the dateAdhesionMembreFamille property.</param>
        /// <param name="estConjoint">Initial value of the estConjoint property.</param>
        /// <param name="idMembreFamille">Initial value of the idMembreFamille property.</param>
        public static MembreFamille CreateMembreFamille(global::System.String nomMembreFamille, global::System.String prenomMembreFamille, global::System.DateTime dateNaissanceMembreFamille, global::System.DateTime dateAdhesionMembreFamille, global::System.Boolean estConjoint, global::System.Int32 idMembreFamille)
        {
            MembreFamille membreFamille = new MembreFamille();
            membreFamille.nomMembreFamille = nomMembreFamille;
            membreFamille.prenomMembreFamille = prenomMembreFamille;
            membreFamille.dateNaissanceMembreFamille = dateNaissanceMembreFamille;
            membreFamille.dateAdhesionMembreFamille = dateAdhesionMembreFamille;
            membreFamille.estConjoint = estConjoint;
            membreFamille.idMembreFamille = idMembreFamille;
            return membreFamille;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomMembreFamille
        {
            get
            {
                return _nomMembreFamille;
            }
            set
            {
                OnnomMembreFamilleChanging(value);
                ReportPropertyChanging("nomMembreFamille");
                _nomMembreFamille = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomMembreFamille");
                OnnomMembreFamilleChanged();
            }
        }
        private global::System.String _nomMembreFamille;
        partial void OnnomMembreFamilleChanging(global::System.String value);
        partial void OnnomMembreFamilleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String prenomMembreFamille
        {
            get
            {
                return _prenomMembreFamille;
            }
            set
            {
                OnprenomMembreFamilleChanging(value);
                ReportPropertyChanging("prenomMembreFamille");
                _prenomMembreFamille = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("prenomMembreFamille");
                OnprenomMembreFamilleChanged();
            }
        }
        private global::System.String _prenomMembreFamille;
        partial void OnprenomMembreFamilleChanging(global::System.String value);
        partial void OnprenomMembreFamilleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateNaissanceMembreFamille
        {
            get
            {
                return _dateNaissanceMembreFamille;
            }
            set
            {
                OndateNaissanceMembreFamilleChanging(value);
                ReportPropertyChanging("dateNaissanceMembreFamille");
                _dateNaissanceMembreFamille = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateNaissanceMembreFamille");
                OndateNaissanceMembreFamilleChanged();
            }
        }
        private global::System.DateTime _dateNaissanceMembreFamille;
        partial void OndateNaissanceMembreFamilleChanging(global::System.DateTime value);
        partial void OndateNaissanceMembreFamilleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAdhesionMembreFamille
        {
            get
            {
                return _dateAdhesionMembreFamille;
            }
            set
            {
                OndateAdhesionMembreFamilleChanging(value);
                ReportPropertyChanging("dateAdhesionMembreFamille");
                _dateAdhesionMembreFamille = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAdhesionMembreFamille");
                OndateAdhesionMembreFamilleChanged();
            }
        }
        private global::System.DateTime _dateAdhesionMembreFamille;
        partial void OndateAdhesionMembreFamilleChanging(global::System.DateTime value);
        partial void OndateAdhesionMembreFamilleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean estConjoint
        {
            get
            {
                return _estConjoint;
            }
            set
            {
                OnestConjointChanging(value);
                ReportPropertyChanging("estConjoint");
                _estConjoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("estConjoint");
                OnestConjointChanged();
            }
        }
        private global::System.Boolean _estConjoint;
        partial void OnestConjointChanging(global::System.Boolean value);
        partial void OnestConjointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idMembreFamille
        {
            get
            {
                return _idMembreFamille;
            }
            set
            {
                if (_idMembreFamille != value)
                {
                    OnidMembreFamilleChanging(value);
                    ReportPropertyChanging("idMembreFamille");
                    _idMembreFamille = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idMembreFamille");
                    OnidMembreFamilleChanged();
                }
            }
        }
        private global::System.Int32 _idMembreFamille;
        partial void OnidMembreFamilleChanging(global::System.Int32 value);
        partial void OnidMembreFamilleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurmembreFamille", "Utilisateur")]
        public Utilisateur Utilisateur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurmembreFamille", "Utilisateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurmembreFamille", "Utilisateur").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Utilisateur> UtilisateurReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurmembreFamille", "Utilisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Utilisateur>("ModeleCSL.UtilisateurmembreFamille", "Utilisateur", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Nouvelle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Nouvelle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Nouvelle object.
        /// </summary>
        /// <param name="idNouvelle">Initial value of the idNouvelle property.</param>
        /// <param name="titreFr">Initial value of the titreFr property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="texteFr">Initial value of the texteFr property.</param>
        /// <param name="titreEn">Initial value of the titreEn property.</param>
        /// <param name="texteEn">Initial value of the texteEn property.</param>
        public static Nouvelle CreateNouvelle(global::System.Int32 idNouvelle, global::System.String titreFr, global::System.DateTime date, global::System.String texteFr, global::System.String titreEn, global::System.String texteEn)
        {
            Nouvelle nouvelle = new Nouvelle();
            nouvelle.idNouvelle = idNouvelle;
            nouvelle.titreFr = titreFr;
            nouvelle.date = date;
            nouvelle.texteFr = texteFr;
            nouvelle.titreEn = titreEn;
            nouvelle.texteEn = texteEn;
            return nouvelle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idNouvelle
        {
            get
            {
                return _idNouvelle;
            }
            set
            {
                if (_idNouvelle != value)
                {
                    OnidNouvelleChanging(value);
                    ReportPropertyChanging("idNouvelle");
                    _idNouvelle = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idNouvelle");
                    OnidNouvelleChanged();
                }
            }
        }
        private global::System.Int32 _idNouvelle;
        partial void OnidNouvelleChanging(global::System.Int32 value);
        partial void OnidNouvelleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String titreFr
        {
            get
            {
                return _titreFr;
            }
            set
            {
                OntitreFrChanging(value);
                ReportPropertyChanging("titreFr");
                _titreFr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("titreFr");
                OntitreFrChanged();
            }
        }
        private global::System.String _titreFr;
        partial void OntitreFrChanging(global::System.String value);
        partial void OntitreFrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String texteFr
        {
            get
            {
                return _texteFr;
            }
            set
            {
                OntexteFrChanging(value);
                ReportPropertyChanging("texteFr");
                _texteFr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("texteFr");
                OntexteFrChanged();
            }
        }
        private global::System.String _texteFr;
        partial void OntexteFrChanging(global::System.String value);
        partial void OntexteFrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String titreEn
        {
            get
            {
                return _titreEn;
            }
            set
            {
                OntitreEnChanging(value);
                ReportPropertyChanging("titreEn");
                _titreEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("titreEn");
                OntitreEnChanged();
            }
        }
        private global::System.String _titreEn;
        partial void OntitreEnChanging(global::System.String value);
        partial void OntitreEnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String texteEn
        {
            get
            {
                return _texteEn;
            }
            set
            {
                OntexteEnChanging(value);
                ReportPropertyChanging("texteEn");
                _texteEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("texteEn");
                OntexteEnChanged();
            }
        }
        private global::System.String _texteEn;
        partial void OntexteEnChanging(global::System.String value);
        partial void OntexteEnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurNouvelle", "Utilisateur")]
        public Utilisateur Utilisateur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurNouvelle", "Utilisateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurNouvelle", "Utilisateur").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Utilisateur> UtilisateurReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurNouvelle", "Utilisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Utilisateur>("ModeleCSL.UtilisateurNouvelle", "Utilisateur", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Province")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Province : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Province object.
        /// </summary>
        /// <param name="idProvince">Initial value of the idProvince property.</param>
        /// <param name="nomProvince">Initial value of the nomProvince property.</param>
        public static Province CreateProvince(global::System.Int32 idProvince, global::System.String nomProvince)
        {
            Province province = new Province();
            province.idProvince = idProvince;
            province.nomProvince = nomProvince;
            return province;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProvince
        {
            get
            {
                return _idProvince;
            }
            set
            {
                if (_idProvince != value)
                {
                    OnidProvinceChanging(value);
                    ReportPropertyChanging("idProvince");
                    _idProvince = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idProvince");
                    OnidProvinceChanged();
                }
            }
        }
        private global::System.Int32 _idProvince;
        partial void OnidProvinceChanging(global::System.Int32 value);
        partial void OnidProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomProvince
        {
            get
            {
                return _nomProvince;
            }
            set
            {
                OnnomProvinceChanging(value);
                ReportPropertyChanging("nomProvince");
                _nomProvince = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomProvince");
                OnnomProvinceChanged();
            }
        }
        private global::System.String _nomProvince;
        partial void OnnomProvinceChanging(global::System.String value);
        partial void OnnomProvinceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurProvince", "Utilisateur")]
        public Utilisateur Utilisateur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurProvince", "Utilisateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurProvince", "Utilisateur").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Utilisateur> UtilisateurReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurProvince", "Utilisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Utilisateur>("ModeleCSL.UtilisateurProvince", "Utilisateur", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Reservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reservation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reservation object.
        /// </summary>
        /// <param name="idReservation">Initial value of the idReservation property.</param>
        /// <param name="heureDebut">Initial value of the heureDebut property.</param>
        /// <param name="heureFin">Initial value of the heureFin property.</param>
        public static Reservation CreateReservation(global::System.Int32 idReservation, global::System.TimeSpan heureDebut, global::System.TimeSpan heureFin)
        {
            Reservation reservation = new Reservation();
            reservation.idReservation = idReservation;
            reservation.heureDebut = heureDebut;
            reservation.heureFin = heureFin;
            return reservation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idReservation
        {
            get
            {
                return _idReservation;
            }
            set
            {
                if (_idReservation != value)
                {
                    OnidReservationChanging(value);
                    ReportPropertyChanging("idReservation");
                    _idReservation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idReservation");
                    OnidReservationChanged();
                }
            }
        }
        private global::System.Int32 _idReservation;
        partial void OnidReservationChanging(global::System.Int32 value);
        partial void OnidReservationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan heureDebut
        {
            get
            {
                return _heureDebut;
            }
            set
            {
                OnheureDebutChanging(value);
                ReportPropertyChanging("heureDebut");
                _heureDebut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("heureDebut");
                OnheureDebutChanged();
            }
        }
        private global::System.TimeSpan _heureDebut;
        partial void OnheureDebutChanging(global::System.TimeSpan value);
        partial void OnheureDebutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan heureFin
        {
            get
            {
                return _heureFin;
            }
            set
            {
                OnheureFinChanging(value);
                ReportPropertyChanging("heureFin");
                _heureFin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("heureFin");
                OnheureFinChanged();
            }
        }
        private global::System.TimeSpan _heureFin;
        partial void OnheureFinChanging(global::System.TimeSpan value);
        partial void OnheureFinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dateReservation
        {
            get
            {
                return _dateReservation;
            }
            set
            {
                OndateReservationChanging(value);
                ReportPropertyChanging("dateReservation");
                _dateReservation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateReservation");
                OndateReservationChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateReservation;
        partial void OndateReservationChanging(Nullable<global::System.DateTime> value);
        partial void OndateReservationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "GroupeReservation", "Groupe")]
        public Groupe Groupe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeReservation", "Groupe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeReservation", "Groupe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groupe> GroupeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groupe>("ModeleCSL.GroupeReservation", "Groupe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groupe>("ModeleCSL.GroupeReservation", "Groupe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "ReservationLocal", "Local")]
        public Local Local
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Local>("ModeleCSL.ReservationLocal", "Local").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Local>("ModeleCSL.ReservationLocal", "Local").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Local> LocalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Local>("ModeleCSL.ReservationLocal", "Local");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Local>("ModeleCSL.ReservationLocal", "Local", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "ReservationJour", "Jour")]
        public Jour Jour
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jour>("ModeleCSL.ReservationJour", "Jour").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jour>("ModeleCSL.ReservationJour", "Jour").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Jour> JourReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jour>("ModeleCSL.ReservationJour", "Jour");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Jour>("ModeleCSL.ReservationJour", "Jour", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "ReservationSession", "Session")]
        public Session Session
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("ModeleCSL.ReservationSession", "Session").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("ModeleCSL.ReservationSession", "Session").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Session> SessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("ModeleCSL.ReservationSession", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Session>("ModeleCSL.ReservationSession", "Session", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="idSession">Initial value of the idSession property.</param>
        /// <param name="dateDebut">Initial value of the dateDebut property.</param>
        /// <param name="dateFin">Initial value of the dateFin property.</param>
        /// <param name="nomSession">Initial value of the nomSession property.</param>
        public static Session CreateSession(global::System.Int32 idSession, global::System.DateTime dateDebut, global::System.DateTime dateFin, global::System.String nomSession)
        {
            Session session = new Session();
            session.idSession = idSession;
            session.dateDebut = dateDebut;
            session.dateFin = dateFin;
            session.nomSession = nomSession;
            return session;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idSession
        {
            get
            {
                return _idSession;
            }
            set
            {
                if (_idSession != value)
                {
                    OnidSessionChanging(value);
                    ReportPropertyChanging("idSession");
                    _idSession = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idSession");
                    OnidSessionChanged();
                }
            }
        }
        private global::System.Int32 _idSession;
        partial void OnidSessionChanging(global::System.Int32 value);
        partial void OnidSessionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateDebut
        {
            get
            {
                return _dateDebut;
            }
            set
            {
                OndateDebutChanging(value);
                ReportPropertyChanging("dateDebut");
                _dateDebut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateDebut");
                OndateDebutChanged();
            }
        }
        private global::System.DateTime _dateDebut;
        partial void OndateDebutChanging(global::System.DateTime value);
        partial void OndateDebutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateFin
        {
            get
            {
                return _dateFin;
            }
            set
            {
                OndateFinChanging(value);
                ReportPropertyChanging("dateFin");
                _dateFin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateFin");
                OndateFinChanged();
            }
        }
        private global::System.DateTime _dateFin;
        partial void OndateFinChanging(global::System.DateTime value);
        partial void OndateFinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomSession
        {
            get
            {
                return _nomSession;
            }
            set
            {
                OnnomSessionChanging(value);
                ReportPropertyChanging("nomSession");
                _nomSession = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomSession");
                OnnomSessionChanged();
            }
        }
        private global::System.String _nomSession;
        partial void OnnomSessionChanging(global::System.String value);
        partial void OnnomSessionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "ReservationSession", "Reservation")]
        public Reservation Reservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationSession", "Reservation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationSession", "Reservation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reservation> ReservationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("ModeleCSL.ReservationSession", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reservation>("ModeleCSL.ReservationSession", "Reservation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="TypeActivite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeActivite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeActivite object.
        /// </summary>
        /// <param name="idType">Initial value of the idType property.</param>
        /// <param name="nomType">Initial value of the nomType property.</param>
        public static TypeActivite CreateTypeActivite(global::System.Int32 idType, global::System.String nomType)
        {
            TypeActivite typeActivite = new TypeActivite();
            typeActivite.idType = idType;
            typeActivite.nomType = nomType;
            return typeActivite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idType
        {
            get
            {
                return _idType;
            }
            set
            {
                if (_idType != value)
                {
                    OnidTypeChanging(value);
                    ReportPropertyChanging("idType");
                    _idType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idType");
                    OnidTypeChanged();
                }
            }
        }
        private global::System.Int32 _idType;
        partial void OnidTypeChanging(global::System.Int32 value);
        partial void OnidTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomType
        {
            get
            {
                return _nomType;
            }
            set
            {
                OnnomTypeChanging(value);
                ReportPropertyChanging("nomType");
                _nomType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomType");
                OnnomTypeChanged();
            }
        }
        private global::System.String _nomType;
        partial void OnnomTypeChanging(global::System.String value);
        partial void OnnomTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "ActiviteTypeActivite", "Activite")]
        public Activite Activite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activite>("ModeleCSL.ActiviteTypeActivite", "Activite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activite>("ModeleCSL.ActiviteTypeActivite", "Activite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activite> ActiviteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activite>("ModeleCSL.ActiviteTypeActivite", "Activite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activite>("ModeleCSL.ActiviteTypeActivite", "Activite", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="TypeUtilisateur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeUtilisateur : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeUtilisateur object.
        /// </summary>
        /// <param name="idType">Initial value of the idType property.</param>
        /// <param name="nomType">Initial value of the nomType property.</param>
        public static TypeUtilisateur CreateTypeUtilisateur(global::System.Int32 idType, global::System.String nomType)
        {
            TypeUtilisateur typeUtilisateur = new TypeUtilisateur();
            typeUtilisateur.idType = idType;
            typeUtilisateur.nomType = nomType;
            return typeUtilisateur;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idType
        {
            get
            {
                return _idType;
            }
            set
            {
                if (_idType != value)
                {
                    OnidTypeChanging(value);
                    ReportPropertyChanging("idType");
                    _idType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idType");
                    OnidTypeChanged();
                }
            }
        }
        private global::System.Int32 _idType;
        partial void OnidTypeChanging(global::System.Int32 value);
        partial void OnidTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomType
        {
            get
            {
                return _nomType;
            }
            set
            {
                OnnomTypeChanging(value);
                ReportPropertyChanging("nomType");
                _nomType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomType");
                OnnomTypeChanged();
            }
        }
        private global::System.String _nomType;
        partial void OnnomTypeChanging(global::System.String value);
        partial void OnnomTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurTypeUtilisateur", "Utilisateur")]
        public Utilisateur Utilisateur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurTypeUtilisateur", "Utilisateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurTypeUtilisateur", "Utilisateur").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Utilisateur> UtilisateurReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateur>("ModeleCSL.UtilisateurTypeUtilisateur", "Utilisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Utilisateur>("ModeleCSL.UtilisateurTypeUtilisateur", "Utilisateur", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModeleCSL", Name="Utilisateur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Employe))]
    public partial class Utilisateur : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Utilisateur object.
        /// </summary>
        /// <param name="idUtilisateur">Initial value of the idUtilisateur property.</param>
        /// <param name="identifiant">Initial value of the identifiant property.</param>
        /// <param name="prenom">Initial value of the prenom property.</param>
        /// <param name="nom">Initial value of the nom property.</param>
        /// <param name="noCivique">Initial value of the noCivique property.</param>
        /// <param name="rue">Initial value of the rue property.</param>
        /// <param name="ville">Initial value of the ville property.</param>
        /// <param name="codePostal">Initial value of the codePostal property.</param>
        /// <param name="noTelephone">Initial value of the noTelephone property.</param>
        /// <param name="dateNaissance">Initial value of the dateNaissance property.</param>
        /// <param name="dateAdhesion">Initial value of the dateAdhesion property.</param>
        /// <param name="motPasse">Initial value of the motPasse property.</param>
        public static Utilisateur CreateUtilisateur(global::System.Int32 idUtilisateur, global::System.String identifiant, global::System.String prenom, global::System.String nom, global::System.String noCivique, global::System.String rue, global::System.String ville, global::System.String codePostal, global::System.String noTelephone, global::System.DateTime dateNaissance, global::System.DateTime dateAdhesion, global::System.String motPasse)
        {
            Utilisateur utilisateur = new Utilisateur();
            utilisateur.idUtilisateur = idUtilisateur;
            utilisateur.identifiant = identifiant;
            utilisateur.prenom = prenom;
            utilisateur.nom = nom;
            utilisateur.noCivique = noCivique;
            utilisateur.rue = rue;
            utilisateur.ville = ville;
            utilisateur.codePostal = codePostal;
            utilisateur.noTelephone = noTelephone;
            utilisateur.dateNaissance = dateNaissance;
            utilisateur.dateAdhesion = dateAdhesion;
            utilisateur.motPasse = motPasse;
            return utilisateur;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idUtilisateur
        {
            get
            {
                return _idUtilisateur;
            }
            set
            {
                if (_idUtilisateur != value)
                {
                    OnidUtilisateurChanging(value);
                    ReportPropertyChanging("idUtilisateur");
                    _idUtilisateur = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idUtilisateur");
                    OnidUtilisateurChanged();
                }
            }
        }
        private global::System.Int32 _idUtilisateur;
        partial void OnidUtilisateurChanging(global::System.Int32 value);
        partial void OnidUtilisateurChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String identifiant
        {
            get
            {
                return _identifiant;
            }
            set
            {
                OnidentifiantChanging(value);
                ReportPropertyChanging("identifiant");
                _identifiant = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("identifiant");
                OnidentifiantChanged();
            }
        }
        private global::System.String _identifiant;
        partial void OnidentifiantChanging(global::System.String value);
        partial void OnidentifiantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String prenom
        {
            get
            {
                return _prenom;
            }
            set
            {
                OnprenomChanging(value);
                ReportPropertyChanging("prenom");
                _prenom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("prenom");
                OnprenomChanged();
            }
        }
        private global::System.String _prenom;
        partial void OnprenomChanging(global::System.String value);
        partial void OnprenomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nom
        {
            get
            {
                return _nom;
            }
            set
            {
                OnnomChanging(value);
                ReportPropertyChanging("nom");
                _nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nom");
                OnnomChanged();
            }
        }
        private global::System.String _nom;
        partial void OnnomChanging(global::System.String value);
        partial void OnnomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String noCivique
        {
            get
            {
                return _noCivique;
            }
            set
            {
                OnnoCiviqueChanging(value);
                ReportPropertyChanging("noCivique");
                _noCivique = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("noCivique");
                OnnoCiviqueChanged();
            }
        }
        private global::System.String _noCivique;
        partial void OnnoCiviqueChanging(global::System.String value);
        partial void OnnoCiviqueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String rue
        {
            get
            {
                return _rue;
            }
            set
            {
                OnrueChanging(value);
                ReportPropertyChanging("rue");
                _rue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("rue");
                OnrueChanged();
            }
        }
        private global::System.String _rue;
        partial void OnrueChanging(global::System.String value);
        partial void OnrueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ville
        {
            get
            {
                return _ville;
            }
            set
            {
                OnvilleChanging(value);
                ReportPropertyChanging("ville");
                _ville = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ville");
                OnvilleChanged();
            }
        }
        private global::System.String _ville;
        partial void OnvilleChanging(global::System.String value);
        partial void OnvilleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String codePostal
        {
            get
            {
                return _codePostal;
            }
            set
            {
                OncodePostalChanging(value);
                ReportPropertyChanging("codePostal");
                _codePostal = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("codePostal");
                OncodePostalChanged();
            }
        }
        private global::System.String _codePostal;
        partial void OncodePostalChanging(global::System.String value);
        partial void OncodePostalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String noTelephone
        {
            get
            {
                return _noTelephone;
            }
            set
            {
                OnnoTelephoneChanging(value);
                ReportPropertyChanging("noTelephone");
                _noTelephone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("noTelephone");
                OnnoTelephoneChanged();
            }
        }
        private global::System.String _noTelephone;
        partial void OnnoTelephoneChanging(global::System.String value);
        partial void OnnoTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateNaissance
        {
            get
            {
                return _dateNaissance;
            }
            set
            {
                OndateNaissanceChanging(value);
                ReportPropertyChanging("dateNaissance");
                _dateNaissance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateNaissance");
                OndateNaissanceChanged();
            }
        }
        private global::System.DateTime _dateNaissance;
        partial void OndateNaissanceChanging(global::System.DateTime value);
        partial void OndateNaissanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateAdhesion
        {
            get
            {
                return _dateAdhesion;
            }
            set
            {
                OndateAdhesionChanging(value);
                ReportPropertyChanging("dateAdhesion");
                _dateAdhesion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateAdhesion");
                OndateAdhesionChanged();
            }
        }
        private global::System.DateTime _dateAdhesion;
        partial void OndateAdhesionChanging(global::System.DateTime value);
        partial void OndateAdhesionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String motPasse
        {
            get
            {
                return _motPasse;
            }
            set
            {
                OnmotPasseChanging(value);
                ReportPropertyChanging("motPasse");
                _motPasse = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("motPasse");
                OnmotPasseChanged();
            }
        }
        private global::System.String _motPasse;
        partial void OnmotPasseChanging(global::System.String value);
        partial void OnmotPasseChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurProvince", "Province")]
        public Province Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("ModeleCSL.UtilisateurProvince", "Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("ModeleCSL.UtilisateurProvince", "Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("ModeleCSL.UtilisateurProvince", "Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("ModeleCSL.UtilisateurProvince", "Province", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurmembreFamille", "membreFamille")]
        public EntityCollection<MembreFamille> membreFamille
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembreFamille>("ModeleCSL.UtilisateurmembreFamille", "membreFamille");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembreFamille>("ModeleCSL.UtilisateurmembreFamille", "membreFamille", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurNouvelle", "Nouvelle")]
        public EntityCollection<Nouvelle> Nouvelle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Nouvelle>("ModeleCSL.UtilisateurNouvelle", "Nouvelle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Nouvelle>("ModeleCSL.UtilisateurNouvelle", "Nouvelle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurCommande", "Commande")]
        public EntityCollection<Commande> Commande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Commande>("ModeleCSL.UtilisateurCommande", "Commande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Commande>("ModeleCSL.UtilisateurCommande", "Commande", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModeleCSL", "UtilisateurTypeUtilisateur", "TypeUtilisateur")]
        public TypeUtilisateur TypeUtilisateur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeUtilisateur>("ModeleCSL.UtilisateurTypeUtilisateur", "TypeUtilisateur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeUtilisateur>("ModeleCSL.UtilisateurTypeUtilisateur", "TypeUtilisateur").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeUtilisateur> TypeUtilisateurReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeUtilisateur>("ModeleCSL.UtilisateurTypeUtilisateur", "TypeUtilisateur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeUtilisateur>("ModeleCSL.UtilisateurTypeUtilisateur", "TypeUtilisateur", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
